plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.4.2"
    id("maven-publish")
}

version = "0.1"
group = "com.birddog"

repositories {
    mavenLocal()
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.birddog.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.jaxrs:micronaut-jaxrs-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.swagger.core.v3:swagger-annotations")
    testAnnotationProcessor("io.micronaut.jaxrs:micronaut-jaxrs-processor")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-session")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.jaxrs:micronaut-jaxrs-server")

    implementation("commons-io:commons-io:2.8.0")

    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.2'

    implementation ("org.nmap4j:org.nmap4j:1.0.4")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")

    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
}


application {
    mainClass.set("com.birddog.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("15")
    targetCompatibility = JavaVersion.toVersion("15")
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.birddog'
            artifactId = 'birddog'
            version = "1.0.0"
            from components.java

            pom {
                name = 'birddog'
                description = 'the birddog app'
            }
        }
    }
}
